["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$taoensso.sente.interfaces","~:imports",null,"~:requires",["^ ","~$enc","~$taoensso.encore","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$IServerChan",["^ ","~:meta",["^ ","~:file","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","~:line",13,"~:column",14,"~:end-line",13,"~:end-column",25,"~:doc",null,"~:protocol-symbol",true,"~:jsdoc",["~#list",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$sch-open?",[["~$sch"]],"~$sch-close!",[["^L"]],"~$sch-send!",[["^L","~$websocket?","~$msg"]]]]],"^F",true,"^5","~$taoensso.sente.interfaces/IServerChan","^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",25,"^B",1,"^A",13,"^I",["^ ","^J",["^ ","^K",[["^L"]],"^M",[["^L"]],"^N",[["^L","^O","^P"]]]],"~:info",null,"^C",13,"~:tag","~$any","~:impls",["^4",[]],"^E",null,"^G",["^H",["@interface"]]],"^K",["^ ","~:protocol-inline",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",16,"^B",4,"^C",16,"^D",13,"~:protocol","^Q","^E","Returns true iff the channel is currently open.","~:arglists",["^H",["~$quote",["^H",[["^L"]]]]]],"^W","^Q","^5","~$taoensso.sente.interfaces/sch-open?","~:variadic",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",13,"~:method-params",["^H",[["^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^B",1,"^A",13,"^C",16,"~:max-fixed-arity",1,"~:fn-var",true,"^X",["^H",["^Y",["^H",[["^L"]]]]],"^E","Returns true iff the channel is currently open."],"^M",["^ ","^V",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",17,"^B",4,"^C",17,"^D",14,"^W","^Q","^E","If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.","^X",["^H",["^Y",["^H",[["^L"]]]]]],"^W","^Q","^5","~$taoensso.sente.interfaces/sch-close!","^[",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",14,"^10",["^H",[["^L"]]],"^11",null,"^12",["^H",[null,null]],"^B",1,"^A",13,"^C",17,"^13",1,"^14",true,"^X",["^H",["^Y",["^H",[["^L"]]]]],"^E","If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false."],"^N",["^ ","^V",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",20,"^B",4,"^C",20,"^D",13,"^W","^Q","^E","If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.","^X",["^H",["^Y",["^H",[["^L","^O","^P"]]]]]],"^W","^Q","^5","~$taoensso.sente.interfaces/sch-send!","^[",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",13,"^10",["^H",[["^L","^O","^P"]]],"^11",null,"^12",["^H",[null,null]],"^B",1,"^A",13,"^C",20,"^13",3,"^14",true,"^X",["^H",["^Y",["^H",[["^L","^O","^P"]]]]],"^E","If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false."],"~$IServerChanAdapter",["^ ","^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",24,"^B",14,"^C",24,"^D",32,"^E",null,"^F",true,"^G",["^H",["@interface"]],"^I",["^ ","^J",["^ ","~$ring-req->server-ch-resp",[["~$sch-adapter","~$ring-req","~$callbacks-map"]]]]],"^F",true,"^5","~$taoensso.sente.interfaces/IServerChanAdapter","^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",32,"^B",1,"^A",24,"^I",["^ ","^J",["^ ","^18",[["^19","^1:","^1;"]]]],"^R",null,"^C",24,"^S","^T","^U",["^4",[]],"^E",null,"^G",["^H",["@interface"]]],"^18",["^ ","^V",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",27,"^B",4,"^C",27,"^D",28,"^W","^1<","^E","Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.","^X",["^H",["^Y",["^H",[["^19","^1:","^1;"]]]]]],"^W","^1<","^5","~$taoensso.sente.interfaces/ring-req->server-ch-resp","^[",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",28,"^10",["^H",[["^19","^1:","^1;"]]],"^11",null,"^12",["^H",[null,null]],"^B",1,"^A",24,"^C",27,"^13",3,"^14",true,"^X",["^H",["^Y",["^H",[["^19","^1:","^1;"]]]]],"^E","Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused."],"~$IPacker",["^ ","^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",44,"^B",14,"^C",44,"^D",21,"^E","Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.","^F",true,"^G",["^H",["@interface"]],"^I",["^ ","^J",["^ ","~$pack",[["~$_","~$x"]],"~$unpack",[["~$_","~$x"]]]]],"^F",true,"^5","~$taoensso.sente.interfaces/IPacker","^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",21,"^B",1,"^A",44,"^I",["^ ","^J",["^ ","^1?",[["~$_","~$x"]],"^1@",[["~$_","~$x"]]]],"^R",null,"^C",44,"^S","^T","^U",["^4",[]],"^E","Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.","^G",["^H",["@interface"]]],"^1?",["^ ","^V",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",47,"^B",4,"^C",47,"^D",8,"^W","^1A","^E",null,"^X",["^H",["^Y",["^H",[["~$_","~$x"]]]]]],"^W","^1A","^5","~$taoensso.sente.interfaces/pack","^[",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",8,"^10",["^H",[["~$_","~$x"]]],"^11",null,"^12",["^H",[null,null]],"^B",1,"^A",44,"^C",47,"^13",2,"^14",true,"^X",["^H",["^Y",["^H",[["~$_","~$x"]]]]],"^E",null],"^1@",["^ ","^V",null,"^?",["^ ","^@","/home/gabriele/Templates/CLOJURE/hello-world.core/resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^A",48,"^B",4,"^C",48,"^D",10,"^W","^1A","^E",null,"^X",["^H",["^Y",["^H",[["~$_","~$x"]]]]]],"^W","^1A","^5","~$taoensso.sente.interfaces/unpack","^[",false,"^@","resources/public/cljs-out/dev/taoensso/sente/interfaces.cljc","^D",10,"^10",["^H",[["~$_","~$x"]]],"^11",null,"^12",["^H",[null,null]],"^B",1,"^A",44,"^C",48,"^13",2,"^14",true,"^X",["^H",["^Y",["^H",[["~$_","~$x"]]]]],"^E",null]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:"],"^E","Alpha, subject to change.\n  Public interfaces / extension points."]